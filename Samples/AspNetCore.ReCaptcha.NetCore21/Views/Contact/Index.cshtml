@using AspNetCore.ReCaptcha
@using Microsoft.Extensions.Options
@inject IOptions<ReCaptchaSettings> ReCaptchaSettings
@model ContactViewModel
@{
    ViewData["Title"] = "Contact";
}
<h1>@ViewData["Title"]</h1>

<p>Send us a contact form!</p>
<p>@TempData["Message"]</p>

<script>
function submitForm() {
    document.forms[0].submit();
}
</script>

<form method="post" asp-action="SubmitForm">
    <div asp-validation-summary="All"></div>

    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="Body" class="control-label"></label>
        <textarea asp-for="Body" class="form-control"></textarea>
    </div>

    <div class="form-group">
        @switch (ReCaptchaSettings.Value.Version)
        {
            case ReCaptchaVersion.V2:
                @Html.ReCaptcha()
                break;
            case ReCaptchaVersion.V2Invisible:
                @Html.ReCaptcha("Submit Invisible ReCaptcha", className: "btn btn-primary", callback: "submitForm")
                break;
            case ReCaptchaVersion.V3:
                @Html.ReCaptcha(action: "homepage")
                break;
        }
    </div>

    @if (ReCaptchaSettings.Value.Version != ReCaptchaVersion.V2Invisible)
    {
        <div class="form-group">
            <input type="submit" value="Submit" class="btn btn-primary"/>
        </div>
    }
</form>
